version: '3'
services:
  backend:
    build: ./backend
    ports:
      - "4000:4000"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    command: node dist/server.js
    # develop:
    #   watch:
    #     - path: ./backend/src
    #       target: /app/src
    #       ignore:
    #         - node_modules/
    #       action: sync
    #     - path: ./backend/package.json
    #       action: rebuild

  ml-backend:
    build: ./ml-backend
    ports:
      - "8000:8000"
    env_file:
      - ./ml-backend/.env
    volumes:
      - ./ml-backend:/app
      - ml_backend_node_modules:/app/node_modules
    # develop:
    #   watch:
    #     - path: ./ml-backend/src
    #       target: /app/src
    #       ignore:
    #         - node_modules/
    #       action: sync
    #     - path: ./ml-backend/package.json
    #       action: rebuild


  # frontend:
  #   build: ./frontend
  #   ports:
  #     - "3000:3000"
  #   env_file:
  #     - ./frontend/.env
  #   volumes:
  #     - ./frontend:/app
  #     - frontend_node_modules:/app/node_modules
  #   develop:
  #     watch:
  #       - path: ./frontend/src
  #         target: /app/src
  #         ignore:
  #           - node_modules/
  #         action: sync
  #       - path: ./frontend/package.json
  #         action: rebuild

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.3
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false

volumes:
  frontend_node_modules:
  backend_node_modules:
  ml_backend_node_modules: