{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:3000';\nexport const getEmployee = async () => {};\nexport const getCompletion = async () => {\n  const response = await axios.post(`${API_BASE_URL}/api/completion`);\n  return response.data;\n};\nexport const getOpenTenderNoticesFromDB = async () => {\n  const response = await axios.get(`${API_BASE_URL}/getOpenTenderNoticesFromDB`);\n  return response.data;\n};\nexport const generateLeads = async FormData => {\n  const response = await axios.post(`${API_BASE_URL}/generateLeads`, FormData);\n  return response.data;\n};\nexport const getOpenTenderNotices = async () => {\n  window.location.href = `${API_BASE_URL}/getOpenTenderNotices`;\n  // const response = await axios.get('${API_BASE_URL}/getNewTenderNotices')\n  // return response.data;\n};\nexport const getFilteredTenderNoticesFromDB = async () => {\n  const response = await axios.get(`${API_BASE_URL}/getFilteredTenderNoticesFromDB`);\n  return response.data;\n};\nexport const filterOpenTenderNotices = async prompt => {\n  const response = await axios.post(`${API_BASE_URL}/filterOpenTenderNotices`, {\n    prompt: prompt\n  });\n  return response.data;\n};\nexport const getOpenTenderNoticesToDB = async () => {\n  const response = await axios.post(`${API_BASE_URL}/getOpenTenderNoticesToDB`);\n  return response.data;\n};\nexport const upload_pdf = async formData => {\n  const response = await axios.post(`http://localhost:4500/analyze_pdf`, formData);\n  return response.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","getEmployee","getCompletion","response","post","data","getOpenTenderNoticesFromDB","get","generateLeads","FormData","getOpenTenderNotices","window","location","href","getFilteredTenderNoticesFromDB","filterOpenTenderNotices","prompt","getOpenTenderNoticesToDB","upload_pdf","formData"],"sources":["/Users/jacobfu/Desktop/Projects/TDP/apps/frontend/src/api.ts"],"sourcesContent":["import axios from 'axios'\nconst API_BASE_URL = 'http://localhost:3000'\n\nexport const getEmployee = async () => {\n\n}\nexport const getCompletion = async () => {\n  const response = await axios.post(`${API_BASE_URL}/api/completion`)\n  return response.data\n}\n\nexport const getOpenTenderNoticesFromDB = async () => {\n  const response = await axios.get(`${API_BASE_URL}/getOpenTenderNoticesFromDB`)\n  return response.data\n}\n\nexport const generateLeads = async (FormData: any) => {\n  const response = await axios.post(`${API_BASE_URL}/generateLeads`, FormData)\n  return response.data\n}\nexport const getOpenTenderNotices = async () => {\n  window.location.href = `${API_BASE_URL}/getOpenTenderNotices`\n  // const response = await axios.get('${API_BASE_URL}/getNewTenderNotices')\n  // return response.data;\n}\n\nexport const getFilteredTenderNoticesFromDB = async () => {\n  const response = await axios.get(\n    `${API_BASE_URL}/getFilteredTenderNoticesFromDB`\n  )\n  return response.data\n}\n\nexport const filterOpenTenderNotices = async (prompt: String) => {\n  const response = await axios.post(`${API_BASE_URL}/filterOpenTenderNotices`, {\n    prompt: prompt,\n  })\n  return response.data\n}\n\nexport const getOpenTenderNoticesToDB = async () => {\n  const response = await axios.post(`${API_BASE_URL}/getOpenTenderNoticesToDB`)\n  return response.data\n}\nexport const upload_pdf = async (formData: FormData) => {\n  const response = await axios.post(\n    `http://localhost:4500/analyze_pdf`,\n    formData\n  )\n  return response.data\n}\n\nexport interface TenderNoticeInterface {\n  'title-titre-eng': string\n  'tenderStatus-appelOffresStatut-eng': string\n  'gsinDescription-nibsDescription-eng': string\n  'unspscDescription-eng': string\n  'noticeType-avisType-eng': string\n  'procurementMethod-methodeApprovisionnement-eng': string\n  'selectionCriteria-criteresSelection-eng': string\n  'limitedTenderingReason-raisonAppelOffresLimite-eng': string\n  'tradeAgreements-accordsCommerciaux-eng': string\n  'regionsOfOpportunity-regionAppelOffres-eng': string\n  'regionsOfDelivery-regionsLivraison-eng': string\n  'contractingEntityName-nomEntitContractante-eng': string\n  'contractingEntityAddressLine-ligneAdresseEntiteContractante-eng': string\n  'contractingEntityAddressCity-entiteContractanteAdresseVille-eng': string\n  'contractingEntityAddressProvince-entiteContractanteAdresseProvince-eng': string\n  'contractingEntityAddressCountry-entiteContractanteAdressePays-eng': string\n  'endUserEntitiesName-nomEntitesUtilisateurFinal-eng': string\n  'endUserEntitiesAddress-adresseEntitesUtilisateurFinal-eng': string\n  'contactInfoAddressLine-contactInfoAdresseLigne-eng': string\n  'contactInfoCity-contacterInfoVille-eng': string\n  'contactInfoProvince-contacterInfoProvince-eng': string\n  'contactInfoCountry-contactInfoPays-eng': string\n  'noticeURL-URLavis-eng': string\n  'attachment-piecesJointes-eng': string\n  'tenderDescription-descriptionAppelOffres-eng': string\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY,CAEvC,CAAC;AACD,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,iBAAiB,CAAC;EACnE,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,0BAA0B,GAAG,MAAAA,CAAA,KAAY;EACpD,MAAMH,QAAQ,GAAG,MAAMJ,KAAK,CAACQ,GAAG,CAAC,GAAGP,YAAY,6BAA6B,CAAC;EAC9E,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMG,aAAa,GAAG,MAAOC,QAAa,IAAK;EACpD,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,gBAAgB,EAAES,QAAQ,CAAC;EAC5E,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC;AACD,OAAO,MAAMK,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EAC9CC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAGb,YAAY,uBAAuB;EAC7D;EACA;AACF,CAAC;AAED,OAAO,MAAMc,8BAA8B,GAAG,MAAAA,CAAA,KAAY;EACxD,MAAMX,QAAQ,GAAG,MAAMJ,KAAK,CAACQ,GAAG,CAC9B,GAAGP,YAAY,iCACjB,CAAC;EACD,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMU,uBAAuB,GAAG,MAAOC,MAAc,IAAK;EAC/D,MAAMb,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,0BAA0B,EAAE;IAC3EgB,MAAM,EAAEA;EACV,CAAC,CAAC;EACF,OAAOb,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMY,wBAAwB,GAAG,MAAAA,CAAA,KAAY;EAClD,MAAMd,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,2BAA2B,CAAC;EAC7E,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;AACD,OAAO,MAAMa,UAAU,GAAG,MAAOC,QAAkB,IAAK;EACtD,MAAMhB,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC/B,mCAAmC,EACnCe,QACF,CAAC;EACD,OAAOhB,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}