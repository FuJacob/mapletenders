{"ast":null,"code":"var _jsxFileName = \"/Users/jacobfu/Desktop/Projects/TDP/apps/frontend/src/auth/pages/ForgotResetPassword.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotResetPassword = () => {\n  _s();\n  // Tries to obtain tokens from the route\n  const {\n    token: routeToken\n  } = useParams();\n  const navigate = useNavigate();\n\n  // Token storage\n  const [accessToken, setAccessToken] = useState('');\n  const [refreshToken, setRefreshToken] = useState('');\n\n  // For forms and messages\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const validatePassword = password => {\n    const passwordRegex = /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{8,}$/;\n    if (!passwordRegex.test(password)) {\n      return \"Password must be at least 8 characters, include one uppercase letter, one number, and one special character.\";\n    }\n    return \"\";\n  };\n  // extract tokens from url hash if necessary.\n  useEffect(() => {\n    if (routeToken) {\n      setAccessToken(routeToken);\n      // In case refresh token is in the hash, extract it:\n      if (window.location.hash) {\n        const hash = window.location.hash.substring(1);\n        const params = new URLSearchParams(hash);\n        const refresh = params.get('refresh_token');\n        if (refresh) setRefreshToken(refresh);\n      }\n    } else if (window.location.hash) {\n      const hash = window.location.hash.substring(1);\n      const params = new URLSearchParams(hash);\n      const access = params.get('access_token');\n      const refresh = params.get('refresh_token');\n      if (access) setAccessToken(access);\n      if (refresh) setRefreshToken(refresh);\n    }\n  }, [routeToken]);\n  const handleForgotPassword = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      await axios.post('http://localhost:3000/api/v1/auth/forgotpassword', {\n        email\n      });\n      setMessage('Password reset link has been sent to your email.');\n    } catch (error) {\n      var _error$response;\n      console.error('Forgot Password Error:', ((_error$response = error.response) == null ? void 0 : _error$response.data) || error.message);\n      setMessage('Error: Unable to send reset email.');\n    }\n    setLoading(false);\n  };\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match.');\n      return;\n    }\n    if (!accessToken || !refreshToken) {\n      setMessage('Reset tokens are missing. Please use the link in your email.');\n      return;\n    }\n    if (validatePassword(password)) {\n      setMessage(validatePassword(password));\n      return;\n    }\n    setLoading(true);\n    try {\n      await axios.post('http://localhost:3000/api/v1/auth/resetpassword', {\n        newPassword: password,\n        refreshToken\n      }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setMessage('Password has been reset successfully. Redirecting to login...');\n      setTimeout(() => navigate('/login'), 3000);\n    } catch (error) {\n      var _error$response2, _error$response3;\n      console.error('Reset Password Error:', ((_error$response2 = error.response) == null ? void 0 : _error$response2.data) || error.message);\n      alert(((_error$response3 = error.response) == null || (_error$response3 = _error$response3.data) == null ? void 0 : _error$response3.error) || 'Error: Unable to reset password.');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh'\n    },\n    children: !accessToken || !refreshToken ?\n    /*#__PURE__*/\n    // Forgot Password Form\n    _jsxDEV(\"form\", {\n      onSubmit: handleForgotPassword,\n      style: {\n        width: '300px',\n        padding: '20px',\n        border: '1px solid #ccc',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '20px'\n        },\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px'\n          },\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Enter your email\",\n          style: {\n            width: '100%',\n            padding: '8px',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        style: {\n          width: '100%',\n          padding: '10px',\n          backgroundColor: '#007bff',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: loading ? 'Sending...' : 'Send Reset Link'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '10px',\n          textAlign: 'center',\n          color: message.includes('Error') ? 'red' : 'green'\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Reset Password Form\n    _jsxDEV(\"form\", {\n      onSubmit: handleResetPassword,\n      style: {\n        width: '300px',\n        padding: '20px',\n        border: '1px solid #ccc',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '20px'\n        },\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px'\n          },\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Enter new password\",\n          style: {\n            width: '100%',\n            padding: '8px',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px'\n          },\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          placeholder: \"Confirm new password\",\n          style: {\n            width: '100%',\n            padding: '8px',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        style: {\n          width: '100%',\n          padding: '10px',\n          backgroundColor: '#007bff',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: loading ? 'Resetting...' : 'Reset Password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '10px',\n          textAlign: 'center',\n          color: message.includes('Error') ? 'red' : 'green'\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotResetPassword, \"z6s9Zwt2+1RfMdF9lBSWSeHdYPc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ForgotResetPassword;\nexport default ForgotResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","ForgotResetPassword","_s","token","routeToken","navigate","accessToken","setAccessToken","refreshToken","setRefreshToken","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","loading","setLoading","validatePassword","passwordRegex","test","window","location","hash","substring","params","URLSearchParams","refresh","get","access","handleForgotPassword","e","preventDefault","post","error","_error$response","console","response","data","handleResetPassword","newPassword","headers","Authorization","setTimeout","_error$response2","_error$response3","alert","style","display","justifyContent","alignItems","height","children","onSubmit","width","padding","border","borderRadius","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","disabled","backgroundColor","color","cursor","marginTop","includes","_c","$RefreshReg$"],"sources":["/Users/jacobfu/Desktop/Projects/TDP/apps/frontend/src/auth/pages/ForgotResetPassword.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst ForgotResetPassword: React.FC = () => {\n  // Tries to obtain tokens from the route\n  const { token: routeToken } = useParams<{ token: string }>();\n  const navigate = useNavigate();\n\n  // Token storage\n  const [accessToken, setAccessToken] = useState<string>('');\n  const [refreshToken, setRefreshToken] = useState<string>('');\n\n  // For forms and messages\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [confirmPassword, setConfirmPassword] = useState<string>('');\n  const [message, setMessage] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const validatePassword = (password: string) => {\n    const passwordRegex =\n      /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{8,}$/;\n\n    if (!passwordRegex.test(password)) {\n      return \"Password must be at least 8 characters, include one uppercase letter, one number, and one special character.\";\n    }\n    return \"\";\n  };\n  // extract tokens from url hash if necessary.\n  useEffect(() => {\n    if (routeToken) {\n      setAccessToken(routeToken);\n      // In case refresh token is in the hash, extract it:\n      if (window.location.hash) {\n        const hash = window.location.hash.substring(1);\n        const params = new URLSearchParams(hash);\n        const refresh = params.get('refresh_token');\n        if (refresh) setRefreshToken(refresh);\n      }\n    } else if (window.location.hash) {\n      const hash = window.location.hash.substring(1);\n      const params = new URLSearchParams(hash);\n      const access = params.get('access_token');\n      const refresh = params.get('refresh_token');\n      if (access) setAccessToken(access);\n      if (refresh) setRefreshToken(refresh);\n    }\n  }, [routeToken]);\n\n  const handleForgotPassword = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      await axios.post('http://localhost:3000/api/v1/auth/forgotpassword', { email });\n      setMessage('Password reset link has been sent to your email.');\n    } catch (error: any) {\n      console.error('Forgot Password Error:', error.response?.data || error.message);\n      setMessage('Error: Unable to send reset email.');\n    }\n    setLoading(false);\n  };\n\n  const handleResetPassword = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match.');\n      return;\n    }\n    if (!accessToken || !refreshToken) {\n      setMessage('Reset tokens are missing. Please use the link in your email.');\n      return;\n    }\n    if (validatePassword(password)) {\n      setMessage(validatePassword(password));\n      return;\n    }\n    setLoading(true);\n    try {\n      await axios.post(\n        'http://localhost:3000/api/v1/auth/resetpassword',\n        { newPassword: password, refreshToken },\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      setMessage('Password has been reset successfully. Redirecting to login...');\n      setTimeout(() => navigate('/login'), 3000);\n    } catch (error: any) {\n      console.error('Reset Password Error:', error.response?.data || error.message);\n      alert(error.response?.data?.error || 'Error: Unable to reset password.');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n      {(!accessToken || !refreshToken) ? (\n        // Forgot Password Form\n        <form\n          onSubmit={handleForgotPassword}\n          style={{ width: '300px', padding: '20px', border: '1px solid #ccc', borderRadius: '5px' }}\n        >\n          <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Forgot Password</h2>\n          <div style={{ marginBottom: '15px' }}>\n            <label style={{ display: 'block', marginBottom: '5px' }}>Email:</label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Enter your email\"\n              style={{ width: '100%', padding: '8px', border: '1px solid #ccc', borderRadius: '4px' }}\n              required\n            />\n          </div>\n          <button\n            type=\"submit\"\n            disabled={loading}\n            style={{ width: '100%', padding: '10px', backgroundColor: '#007bff', color: '#fff', border: 'none', borderRadius: '4px', cursor: 'pointer' }}\n          >\n            {loading ? 'Sending...' : 'Send Reset Link'}\n          </button>\n          {message && (\n            <p style={{ marginTop: '10px', textAlign: 'center', color: message.includes('Error') ? 'red' : 'green' }}>\n              {message}\n            </p>\n          )}\n        </form>\n      ) : (\n        // Reset Password Form\n        <form\n          onSubmit={handleResetPassword}\n          style={{ width: '300px', padding: '20px', border: '1px solid #ccc', borderRadius: '5px' }}\n        >\n          <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>Reset Password</h2>\n          <div style={{ marginBottom: '15px' }}>\n            <label style={{ display: 'block', marginBottom: '5px' }}>New Password:</label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Enter new password\"\n              style={{ width: '100%', padding: '8px', border: '1px solid #ccc', borderRadius: '4px' }}\n              required\n            />\n          </div>\n          <div style={{ marginBottom: '15px' }}>\n            <label style={{ display: 'block', marginBottom: '5px' }}>Confirm Password:</label>\n            <input\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              placeholder=\"Confirm new password\"\n              style={{ width: '100%', padding: '8px', border: '1px solid #ccc', borderRadius: '4px' }}\n              required\n            />\n          </div>\n          <button\n            type=\"submit\"\n            disabled={loading}\n            style={{ width: '100%', padding: '10px', backgroundColor: '#007bff', color: '#fff', border: 'none', borderRadius: '4px', cursor: 'pointer' }}\n          >\n            {loading ? 'Resetting...' : 'Reset Password'}\n          </button>\n          {message && (\n            <p style={{ marginTop: '10px', textAlign: 'center', color: message.includes('Error') ? 'red' : 'green' }}>\n              {message}\n            </p>\n          )}\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default ForgotResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}