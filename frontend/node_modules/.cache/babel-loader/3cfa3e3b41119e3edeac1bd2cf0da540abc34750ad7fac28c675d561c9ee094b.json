{"ast":null,"code":"import _extends from \"/Users/jacobfu/Desktop/Projects/TDP/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/jacobfu/Desktop/Projects/TDP/apps/frontend/src/features/tdp-kb/components/SearchBar.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  onSearch,\n  filters\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(filters.query); // initialize with current search term from filters\n  const [isLoading, setIsLoading] = useState(false); // track loading state for search\n\n  // handle input changes for search term and filters\n  const handleInputChange = e => {\n    setSearchTerm(e.target.value);\n  };\n\n  // debounced search after user stops typing (500ms delay)\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (searchTerm.trim() !== filters.query) {\n        setIsLoading(true);\n        // trigger search with the updated filters\n        onSearch(_extends({}, filters, {\n          query: searchTerm.trim()\n        }));\n      }\n    }, 500);\n\n    // clear timeout if input changes before delay\n    return () => clearTimeout(timer);\n  }, [searchTerm, filters, onSearch]);\n\n  // handle form submission\n  const handleSearch = e => {\n    e.preventDefault();\n    if (searchTerm.trim()) {\n      setIsLoading(true);\n      onSearch(_extends({}, filters, {\n        query: searchTerm.trim()\n      })); // apply the search term\n    }\n  };\n\n  // clear the search term and reset the filters\n  const handleClear = () => {\n    setSearchTerm(''); // reset search term\n    onSearch(_extends({}, filters, {\n      query: ''\n    })); // reset search results\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSearch,\n    className: \"search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      placeholder: \"Search for tenders...\",\n      onChange: handleInputChange // update the search term when user types\n      ,\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleClear,\n      className: \"clear-button\",\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"search-button\",\n      disabled: isLoading,\n      children: [isLoading ? 'Searching...' : 'Search', \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"WDhxOTM1p52pTP6EsWZ133HKrQA=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","SearchBar","onSearch","filters","_s","searchTerm","setSearchTerm","query","isLoading","setIsLoading","handleInputChange","e","target","value","timer","setTimeout","trim","_extends","clearTimeout","handleSearch","preventDefault","handleClear","onSubmit","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/jacobfu/Desktop/Projects/TDP/apps/frontend/src/features/tdp-kb/components/SearchBar.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\n\ninterface SearchBarProps {\n  onSearch: (filters: {\n    query: string\n    category: string\n    location: string\n    status: string\n    deadlineFrom: string\n    deadlineTo: string\n    budgetMin: string\n    budgetMax: string\n    sortBy: string\n  }) => void\n  filters: {\n    query: string\n    category: string\n    location: string\n    status: string\n    deadlineFrom: string\n    deadlineTo: string\n    budgetMin: string\n    budgetMax: string\n    sortBy: string\n  }\n}\n\n\nconst SearchBar = ({ onSearch, filters }: SearchBarProps) => {\n  const [searchTerm, setSearchTerm] = useState(filters.query) // initialize with current search term from filters\n  const [isLoading, setIsLoading] = useState(false) // track loading state for search\n\n  // handle input changes for search term and filters\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value)\n  }\n\n  // debounced search after user stops typing (500ms delay)\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (searchTerm.trim() !== filters.query) {\n        setIsLoading(true)\n        // trigger search with the updated filters\n        onSearch({ ...filters, query: searchTerm.trim() })\n      }\n    }, 500)\n\n    // clear timeout if input changes before delay\n    return () => clearTimeout(timer)\n  }, [searchTerm, filters, onSearch])\n\n  // handle form submission\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault()\n    if (searchTerm.trim()) {\n      setIsLoading(true)\n      onSearch({ ...filters, query: searchTerm.trim() }) // apply the search term\n    }\n  }\n\n  // clear the search term and reset the filters\n  const handleClear = () => {\n    setSearchTerm('') // reset search term\n    onSearch({ ...filters, query: '' }) // reset search results\n  }\n\n  return (\n    <form onSubmit={handleSearch} className=\"search-bar\">\n      {/* input field for the search term */}\n      <input\n        type=\"text\"\n        value={searchTerm}\n        placeholder=\"Search for tenders...\"\n        onChange={handleInputChange} // update the search term when user types\n        className=\"search-input\"\n      />\n\n      {/* clear button only if there's text in the search bar */}\n      {searchTerm && (\n        <button type=\"button\" onClick={handleClear} className=\"clear-button\">\n          Clear\n        </button>\n      )}\n\n      {/* search button */}\n      <button type=\"submit\" className=\"search-button\" disabled={isLoading}>\n        {isLoading ? 'Searching...' : 'Search'} {/* show loading text when searching */}\n      </button>\n    </form>\n  )\n}\n\nexport default SearchBar\n"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AA4B3C,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAwB,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAACM,OAAO,CAACI,KAAK,CAAC,EAAC;EAC5D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,EAAC;;EAElD;EACA,MAAMa,iBAAiB,GAAIC,CAAsC,IAAK;IACpEL,aAAa,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACd,MAAMgB,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7B,IAAIV,UAAU,CAACW,IAAI,CAAC,CAAC,KAAKb,OAAO,CAACI,KAAK,EAAE;QACvCE,YAAY,CAAC,IAAI,CAAC;QAClB;QACAP,QAAQ,CAAAe,QAAA,KAAMd,OAAO;UAAEI,KAAK,EAAEF,UAAU,CAACW,IAAI,CAAC;QAAC,EAAE,CAAC;MACpD;IACF,CAAC,EAAE,GAAG,CAAC;;IAEP;IACA,OAAO,MAAME,YAAY,CAACJ,KAAK,CAAC;EAClC,CAAC,EAAE,CAACT,UAAU,EAAEF,OAAO,EAAED,QAAQ,CAAC,CAAC;;EAEnC;EACA,MAAMiB,YAAY,GAAIR,CAAkB,IAAK;IAC3CA,CAAC,CAACS,cAAc,CAAC,CAAC;IAClB,IAAIf,UAAU,CAACW,IAAI,CAAC,CAAC,EAAE;MACrBP,YAAY,CAAC,IAAI,CAAC;MAClBP,QAAQ,CAAAe,QAAA,KAAMd,OAAO;QAAEI,KAAK,EAAEF,UAAU,CAACW,IAAI,CAAC;MAAC,EAAE,CAAC,EAAC;IACrD;EACF,CAAC;;EAED;EACA,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBf,aAAa,CAAC,EAAE,CAAC,EAAC;IAClBJ,QAAQ,CAAAe,QAAA,KAAMd,OAAO;MAAEI,KAAK,EAAE;IAAE,EAAE,CAAC,EAAC;EACtC,CAAC;EAED,oBACEP,OAAA;IAAMsB,QAAQ,EAAEH,YAAa;IAACI,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAElDxB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXZ,KAAK,EAAER,UAAW;MAClBqB,WAAW,EAAC,uBAAuB;MACnCC,QAAQ,EAAEjB,iBAAkB,CAAC;MAAA;MAC7Ba,SAAS,EAAC;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,EAGD1B,UAAU,iBACTL,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAACO,OAAO,EAAEX,WAAY;MAACE,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAErE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT,eAGD/B,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAACF,SAAS,EAAC,eAAe;MAACU,QAAQ,EAAEzB,SAAU;MAAAgB,QAAA,GACjEhB,SAAS,GAAG,cAAc,GAAG,QAAQ,EAAC,GAAC;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAA3B,EAAA,CA9DKH,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAgEf,eAAeA,SAAS;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}