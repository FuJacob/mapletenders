{"ast":null,"code":"var _jsxFileName = \"/Users/jacobfu/Desktop/Projects/TDP/apps/frontend/src/app/pages/Rfp.tsx\",\n  _s = $RefreshSig$();\nimport { get_sentences_rfp } from '../../api';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Rfp = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      setData(await get_sentences_rfp());\n    };\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"body\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Upload PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"pdf\",\n            accept: \"application/pdf\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }, this), data ? data.map((sentence, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-4 font-bold\",\n          children: sentence\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }, this);\n      }) : 'No data']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(Rfp, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = Rfp;\nexport default Rfp;\nvar _c;\n$RefreshReg$(_c, \"Rfp\");","map":{"version":3,"names":["get_sentences_rfp","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Rfp","_s","data","setData","getData","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","accept","required","map","sentence","index","className","_c","$RefreshReg$"],"sources":["/Users/jacobfu/Desktop/Projects/TDP/apps/frontend/src/app/pages/Rfp.tsx"],"sourcesContent":["import { get_sentences_rfp } from '../../api'\nimport { useEffect, useState } from 'react'\nconst Rfp = () => {\n  const [data, setData] = useState<string[]>([])\n\n  useEffect(() => {\n    const getData = async () => {\n      setData(await get_sentences_rfp())\n    }\n    getData()\n  }, [])\n  return (\n      <>\n          <div>\n              <form >\n                 <body>\n                      <h1>Upload PDF</h1>\n                      <input type=\"file\" name=\"pdf\" accept=\"application/pdf\" required />\n                      <input type=\"submit\" />\n                 </body>\n              </form>\n              \n          {data\n            ? data.map((sentence: string, index: number) => {\n                return (\n                  <div className=\"m-4 font-bold\" key={index}>\n                    {sentence}\n                  </div>\n                )\n              })\n            : 'No data'}\n        </div>\n      </>\n  )\n}\n\nexport default Rfp\n"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,WAAW;AAC7C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC3C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAW,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMU,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1BD,OAAO,CAAC,MAAMV,iBAAiB,CAAC,CAAC,CAAC;IACpC,CAAC;IACDW,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EACN,oBACIP,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACIR,OAAA;MAAAQ,QAAA,gBACIR,OAAA;QAAAQ,QAAA,eACGR,OAAA;UAAAQ,QAAA,gBACKR,OAAA;YAAAQ,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnBZ,OAAA;YAAOa,IAAI,EAAC,MAAM;YAACC,IAAI,EAAC,KAAK;YAACC,MAAM,EAAC,iBAAiB;YAACC,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClEZ,OAAA;YAAOa,IAAI,EAAC;UAAQ;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,EAEVP,IAAI,GACDA,IAAI,CAACY,GAAG,CAAC,CAACC,QAAgB,EAAEC,KAAa,KAAK;QAC5C,oBACEnB,OAAA;UAAKoB,SAAS,EAAC,eAAe;UAAAZ,QAAA,EAC3BU;QAAQ,GADyBC,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEpC,CAAC;MAEV,CAAC,CAAC,GACF,SAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC,gBACN,CAAC;AAET,CAAC;AAAAR,EAAA,CAhCKD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAkCT,eAAeA,GAAG;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}